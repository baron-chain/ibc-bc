syntax = "proto3";

package ibc.core.connection.v1;

option go_package = "github.com/cosmos/ibc-go/v7/modules/core/03-connection/types";

import "gogoproto/gogo.proto";
import "ibc/core/commitment/v1/commitment.proto";

message ConnectionEnd {
  option (gogoproto.goproto_getters) = false;

  string client_id = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  repeated Version versions = 2;
  State state = 3;
  Counterparty counterparty = 4 [(gogoproto.nullable) = false];
  uint64 delay_period = 5 [(gogoproto.moretags) = "yaml:\"delay_period\""];
}

message IdentifiedConnection {
  option (gogoproto.goproto_getters) = false;

  string id = 1 [(gogoproto.moretags) = "yaml:\"id\""];
  string client_id = 2 [(gogoproto.moretags) = "yaml:\"client_id\""];
  repeated Version versions = 3;
  State state = 4;
  Counterparty counterparty = 5 [(gogoproto.nullable) = false];
  uint64 delay_period = 6 [(gogoproto.moretags) = "yaml:\"delay_period\""];
}

enum State {
  option (gogoproto.goproto_enum_prefix) = false;

  STATE_UNINITIALIZED_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "UNINITIALIZED"];
  STATE_INIT = 1 [(gogoproto.enumvalue_customname) = "INIT"];
  STATE_TRYOPEN = 2 [(gogoproto.enumvalue_customname) = "TRYOPEN"];
  STATE_OPEN = 3 [(gogoproto.enumvalue_customname) = "OPEN"];
}

message Counterparty {
  option (gogoproto.goproto_getters) = false;

  string client_id = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  string connection_id = 2 [(gogoproto.moretags) = "yaml:\"connection_id\""];
  ibc.core.commitment.v1.MerklePrefix prefix = 3 [(gogoproto.nullable) = false];
}

message ClientPaths {
  repeated string paths = 1;
}

message ConnectionPaths {
  string client_id = 1 [(gogoproto.moretags) = "yaml:\"client_id\""];
  repeated string paths = 2;
}

message Version {
  option (gogoproto.goproto_getters) = false;

  string identifier = 1;
  repeated string features = 2;
}

message Params {
  uint64 max_expected_time_per_block = 1 [(gogoproto.moretags) = "yaml:\"max_expected_time_per_block\""];
}
